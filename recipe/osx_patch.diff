diff --git a/wrappers/python/build.py.in b/wrappers/python/build.py.in
index d9d1624..a9ca50b 100755
--- a/wrappers/python/build.py.in
+++ b/wrappers/python/build.py.in
@@ -36,28 +36,14 @@ libargs = " ".join("-l{}".format(l) for l in libraries)
 
 ## Python compile/link args
 pyargs = "-I" + sysconfig.get_config_var("INCLUDEPY")
-libpys = [os.path.join(sysconfig.get_config_var(ld), sysconfig.get_config_var("LDLIBRARY")) for ld in ["LIBPL", "LIBDIR"]]
-libpys.extend( glob(os.path.join(sysconfig.get_config_var("LIBPL"), "libpython*.*")) )
-libpys.extend( glob(os.path.join(sysconfig.get_config_var("LIBDIR"), "libpython*.*")) )
-libpy = None
-for lp in libpys:
-    if os.path.exists(lp):
-        libpy = lp
-        break
-if libpy is None:
-    print("No libpython found in expected location exiting")
-    print("Considered locations were:", libpys)
-    sys.exit(1)
-pyargs += " " + libpy
 pyargs += " " + sysconfig.get_config_var("LIBS")
 pyargs += " " + sysconfig.get_config_var("LIBM")
-#pyargs += " " + sysconfig.get_config_var("LINKFORSHARED")
 
 
 ## Assemble the compile & link command
-compile_cmd = "  ".join([os.environ.get("CXX", "g++"), "-shared -fPIC",
-                         "-o", srcname.replace(".cpp", ".so"),
-                         srcpath, incargs, cmpargs, linkargs, libargs, pyargs])
+compile_cmd = "  ".join([sysconfig.get_config_var("LDCXXSHARED"), "-std=c++11",
+                                                   "-o", srcname.replace(".cpp", ".so"),
+                                                   srcpath, incargs, cmpargs, linkargs, libargs, pyargs])
 print("Build command =", compile_cmd)
 
 
